name: Build Ubuntu CLI Live ISO

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install xorriso and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xorriso isolinux grub-pc-bin grub-efi-amd64-bin debootstrap squashfs-tools mtools dosfstools systemd-container

      - name: Bootstrap Ubuntu CLI rootfs
        run: |
          sudo debootstrap --variant=minbase noble chroot http://archive.ubuntu.com/ubuntu/
          echo "ubuntu-cli" | sudo tee chroot/etc/hostname
          echo "127.0.1.1 ubuntu-cli" | sudo tee -a chroot/etc/hosts

      - name: Configure minimal system
        run: |
          sudo cp /etc/resolv.conf chroot/etc/
          sudo mount --bind /dev chroot/dev
          sudo mount --bind /proc chroot/proc
          sudo mount --bind /sys chroot/sys

          sudo chroot chroot /bin/bash -c "
            apt-get update &&
            apt-get install -y linux-image-generic systemd-sysv sudo openssh-server vim network-manager curl wget ca-certificates less &&
            echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers &&
            useradd -m -s /bin/bash ubuntu &&
            echo 'ubuntu:ubuntu' | chpasswd &&
            mkdir -p /etc/systemd/system/getty@tty1.service.d &&
            echo '[Service]' > /etc/systemd/system/getty@tty1.service.d/override.conf &&
            echo 'ExecStart=' >> /etc/systemd/system/getty@tty1.service.d/override.conf &&
            echo 'ExecStart=-/sbin/agetty --autologin ubuntu --noclear %I \$TERM' >> /etc/systemd/system/getty@tty1.service.d/override.conf &&
            systemctl enable NetworkManager
          "

          sudo umount chroot/dev
          sudo umount chroot/proc
          sudo umount chroot/sys

      - name: Add AppImage support directory
        run: |
          sudo mkdir -p chroot/opt/appimages
          echo 'export PATH=/opt/appimages:$PATH' | sudo tee -a chroot/etc/profile.d/appimages.sh
          sudo chmod +x chroot/etc/profile.d/appimages.sh

      - name: Create SquashFS
        run: |
          sudo mksquashfs chroot filesystem.squashfs -e boot

      - name: Create ISO directory structure
        run: |
          mkdir -p iso/{boot/grub,EFI/BOOT}
          sudo cp chroot/boot/vmlinuz-* iso/boot/vmlinuz
          sudo cp chroot/boot/initrd.img-* iso/boot/initrd

          cat <<EOF > iso/boot/grub/grub.cfg
          set timeout=5
          menuentry "Ubuntu CLI Live" {
              linux /boot/vmlinuz boot=live toram nopersistent quiet ---
              initrd /boot/initrd
          }
          EOF

      - name: Build ISO image
        run: |
          grub-mkrescue -o ubuntu-cli-live.iso iso

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-cli-live
          path: ubuntu-cli-live.iso
