# .github/workflows/build-ubuntu-live.yml
name: Build Ubuntu Live ISO

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-iso:
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Free up disk space
      run: |
        sudo apt-get remove -y '^dotnet-.*' '^llvm-.*' '^mongodb-.*' '^mysql-.*' || true
        sudo apt-get remove -y azure-cli google-chrome-stable firefox powershell mono-devel || true
        sudo apt-get autoremove -y
        sudo apt-get clean
        df -h

    - name: Install live-build
      run: |
        sudo apt-get update
        sudo apt-get install -y live-build debootstrap squashfs-tools xorriso isolinux syslinux-efi

    - name: Create workspace
      run: |
        mkdir -p ubuntu-live
        cd ubuntu-live

    - name: Configure live-build
      run: |
        cd ubuntu-live
        lb config \
          --distribution noble \
          --archive-areas "main restricted universe multiverse" \
          --mode ubuntu \
          --system live \
          --binary-images iso-hybrid \
          --bootappend-live "boot=live components username=ubuntu hostname=ubuntu-live" \
          --debian-installer false \
          --linux-flavours generic \
          --memtest none \
          --win32-loader false \
          --bootloader syslinux

    - name: Add custom packages
      run: |
        cd ubuntu-live
        cat > config/package-lists/custom.list.chroot << EOF
        # System tools
        curl
        wget
        git
        vim
        nano
        htop
        tree
        unzip
        mc
        tmux
        screen
        bash-completion
        
        # Desktop environment
        ubuntu-desktop-minimal
        firefox
        thunar
        
        # System monitoring
        glances
        iotop
        iftop
        ncdu
        sysstat
        lsof
        strace
        
        # Disk tools
        parted
        gparted
        e2fsprogs
        xfsprogs
        btrfs-progs
        ntfs-3g
        exfat-fuse
        dosfstools
        
        # Recovery tools
        gddrescue
        partclone
        clonezilla
        fsarchiver
        testdisk
        
        # Archive tools
        rsync
        tar
        gzip
        xz-utils
        zip
        p7zip-full
        p7zip-rar
        
        # Network tools
        openssh-client
        openssh-server
        net-tools
        iproute2
        nmap
        
        # Hardware tools
        smartmontools
        hdparm
        fio
        
        # Development
        python3
        make
        gcc
        build-essential
        
        # Security
        chkrootkit
        rkhunter
        clamav
        
        # System utilities
        util-linux
        procps
        mount
        file
        gpg
        EOF

    - name: Add custom configuration
      run: |
        cd ubuntu-live
        mkdir -p config/includes.chroot/etc/skel
        
        cat > config/includes.chroot/etc/skel/.bashrc << 'EOF'
        # Ubuntu Live System .bashrc
        export PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
        alias ll='ls -alF'
        alias la='ls -A'
        alias l='ls -CF'
        
        echo "=== Ubuntu Live System ==="
        echo "Username: ubuntu (sudo without password)"
        echo "Build date: $(date)"
        echo "=========================="
        EOF

    - name: Build ISO
      run: |
        cd ubuntu-live
        sudo lb build

    - name: Find and prepare ISO
      run: |
        cd ubuntu-live
        # Find the built ISO
        ISO_FILE=$(find . -name "*.iso" -type f | head -1)
        
        if [ -z "$ISO_FILE" ]; then
          echo "No ISO file found!"
          ls -la
          exit 1
        fi
        
        echo "Found ISO: $ISO_FILE"
        
        # Create timestamped name
        TIMESTAMP=$(date +%Y%m%d-%H%M)
        FINAL_ISO="ubuntu-live-custom-${TIMESTAMP}.iso"
        
        # Copy and create checksum
        cp "$ISO_FILE" "$FINAL_ISO"
        sha256sum "$FINAL_ISO" > "${FINAL_ISO}.sha256"
        
        echo "Final ISO created: $FINAL_ISO"
        ls -lh *.iso*

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-live-iso
        path: ubuntu-live/*.iso*
        retention-days: 30

    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ubuntu-live/*.iso*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
