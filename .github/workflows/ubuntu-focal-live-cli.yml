name: Build Ubuntu CLI Live ISO

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y debootstrap xorriso squashfs-tools grub-pc-bin grub-efi-amd64-bin mtools dosfstools

    - name: Set up working directories
      run: |
        mkdir -p iso/{boot/grub,EFI/boot}
        mkdir -p chroot

    - name: Bootstrap minimal Ubuntu CLI
      run: |
        sudo debootstrap --variant=minbase focal chroot http://archive.ubuntu.com/ubuntu/

    - name: Set up basic configs
      run: |
        sudo cp /etc/resolv.conf chroot/etc/
        echo "ubuntu-cli-live" | sudo tee chroot/etc/hostname
        sudo tee chroot/etc/hosts > /dev/null <<EOF
127.0.0.1 localhost
127.0.1.1 ubuntu-cli-live
EOF

    - name: Install basic packages and user
      run: |
        sudo chroot chroot bash -c "
          apt-get update
          apt-get install -y sudo linux-image-generic grub-pc systemd-sysv net-tools \
                             network-manager openssh-server curl apparmor ca-certificates \
                             udev initramfs-tools
          echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/ubuntu
          useradd -m -s /bin/bash ubuntu
          echo ubuntu:ubuntu | chpasswd
        "

    - name: Clean up chroot
      run: |
        sudo chroot chroot apt-get clean
        sudo rm -rf chroot/var/lib/apt/lists/*

    - name: Build squashfs
      run: |
        sudo mksquashfs chroot iso/casper/filesystem.squashfs -e boot

    - name: Copy kernel and initrd
      run: |
        KERNEL=$(ls chroot/boot/vmlinuz-* | head -n1 | xargs -n1 basename)
        INITRD=$(ls chroot/boot/initrd.img-* | head -n1 | xargs -n1 basename)
        sudo cp chroot/boot/$KERNEL iso/casper/vmlinuz
        sudo cp chroot/boot/$INITRD iso/casper/initrd

    - name: Create grub.cfg
      run: |
        cat <<EOF | sudo tee iso/boot/grub/grub.cfg
set default=0
set timeout=5

menuentry "Ubuntu CLI Live" {
    linux /casper/vmlinuz boot=casper quiet ---
    initrd /casper/initrd
}
EOF

    - name: Create ISO image
      run: |
        grub-mkrescue -o ubuntu-cli-live.iso iso --compress=xz

    - name: Upload ISO artifact
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-cli-live
        path: ubuntu-cli-live.iso
