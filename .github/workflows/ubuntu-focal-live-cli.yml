name: Build Ubuntu CLI Live ISO

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            debootstrap xorriso squashfs-tools grub-pc-bin grub-efi-amd64-bin \
            mtools dosfstools rsync

      - name: Create working directories
        run: |
          mkdir -p live-iso/{chroot,iso/{boot/grub,EFI/BOOT}}

      - name: Bootstrap Ubuntu system
        run: |
          sudo debootstrap --arch=amd64 focal live-iso/chroot http://archive.ubuntu.com/ubuntu/

      - name: Set up basic configs
        run: |
          sudo cp /etc/resolv.conf live-iso/chroot/etc/
          echo "ubuntu-cli-live" | sudo tee live-iso/chroot/etc/hostname
          sudo tee live-iso/chroot/etc/hosts > /dev/null <<EOF
127.0.0.1 localhost
127.0.1.1 ubuntu-cli-live
EOF

      - name: Mount filesystems
        run: |
          sudo mount --bind /dev live-iso/chroot/dev
          sudo mount --bind /sys live-iso/chroot/sys
          sudo mount --bind /proc live-iso/chroot/proc

      - name: Install packages in chroot
        run: |
          sudo chroot live-iso/chroot /bin/bash -c "
            apt update &&
            DEBIAN_FRONTEND=noninteractive apt install -y linux-image-generic sudo grub-pc-bin grub-efi-amd64-bin systemd-sysv net-tools curl &&
            useradd -m -s /bin/bash ubuntu &&
            echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
          "

      - name: Unmount filesystems
        run: |
          sudo umount -lf live-iso/chroot/dev || true
          sudo umount -lf live-iso/chroot/sys || true
          sudo umount -lf live-iso/chroot/proc || true

      - name: Create squashfs
        run: |
          sudo mksquashfs live-iso/chroot live-iso/iso/filesystem.squashfs -e boot

      - name: Copy kernel and initrd
        run: |
          sudo cp live-iso/chroot/boot/vmlinuz-* live-iso/iso/vmlinuz
          sudo cp live-iso/chroot/boot/initrd.img-* live-iso/iso/initrd

      - name: Create grub config
        run: |
          cat <<EOF | sudo tee live-iso/iso/boot/grub/grub.cfg
set default=0
set timeout=5

menuentry "Ubuntu CLI Live" {
    linux /vmlinuz boot=live quiet
    initrd /initrd
}
EOF

      - name: Create EFI bootloader
        run: |
          grub-mkimage -o live-iso/iso/EFI/BOOT/BOOTx64.EFI -p /boot/grub -O x86_64-efi part_gpt part_msdos fat iso9660 configfile normal linux echo efi_gop efi_uga gfxterm search search_fs_uuid search_label search_fs_file terminal boot

      - name: Create BIOS bootloader
        run: |
          grub-mkrescue -o ubuntu-cli-live.iso live-iso/iso --compress=xz

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-cli-live.iso
          path: ubuntu-cli-live.iso
